ASCII STL

An ASCII STL file begins with the line:

    solid name

where name is an optional string (though if name is omitted there must still be
a space after solid). The file continues with any number of triangles, each
represented as follows:

    facet normal ni nj nk
        outer loop
            vertex v1x v1y v1z
            vertex v2x v2y v2z
            vertex v3x v3y v3z
        endloop
    endfacet

where each n or v is a floating point number in sign-mantissa 'e'-sign-exponent
format, e.g., "-2.648000e-002" (noting that each "v" must be non-negative). The
file concludes with:

    endsolid name

The structure of the format suggests that other possibilities exist (e.g.,
facets with more than one 'loop', or loops with more than three vertices). In
practice, however, all facets are simple triangles.

White space (spaces, tabs, newlines) may be used anywhere in the file except
within numbers or words. The spaces between 'facet' and 'normal' and between
'outer' and 'loop' are required.

It is a common extension to allow multiple solid/endsolid sections in an ASCII
STL file. Typically, each solid/endsolid section defines a closed, water-tight,
manifold body. Though being closed, manifold is NOT requird. STL readers that
support multiple solid/endsolid sections will usually make these bodies
individually selectable.

****************************

Binary STL

A binary STL file has an 80 character header (which is generally ignored – but
which should never begin with 'solid' because that will lead most software to
assume that this is an ASCII STL file). Following the header is a 4 byte
unsigned integer indicating the number of triangular facets in the file.
Following that is data describing each triangle in turn. The file simply ends
after the last triangle.

Each triangle is described by twelve 32-bit-floating point numbers: three for
the normal and then three for the X/Y/Z coordinate of each vertex – just as
with the ASCII version of STL. After the twelve floats there is a two byte
unsigned 'short' integer that is the 'attribute byte count' – in the standard
format, this should be zero because most software does not understand anything
else.

Floating point numbers are represented as IEEE floating point numbers and are
assumed to be little endian, although this is not stated in documentation.

UINT8[80] – Header
UINT32 – Number of triangles
foreach triangle
    REAL32[3] – Normal vector
    REAL32[3] – Vertex 1
    REAL32[3] – Vertex 2
    REAL32[3] – Vertex 3
    UINT16 – Attribute byte count
end
